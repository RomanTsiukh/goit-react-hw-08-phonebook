{"version":3,"file":"static/js/805.3a0dbe59.chunk.js","mappings":"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","sources":["constants.js","components/ContactForm/ContactForm.styled.js","../node_modules/@mui/system/esm/Box/Box.js","components/ContactForm/ContactForm.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Filter/Filter.jsx","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nexport const NAME_MATCH = \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\nexport const nameError = \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\nexport const numberError = \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\";\nconst requiredError = \"This field is required\";\n\nexport const schema = yup.object().shape({\n    name: yup.string().required(requiredError).matches(NAME_MATCH, nameError),\n    number: yup.string().required(requiredError).matches(/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/, numberError),\n});\n\nexport const authSchema = yup.object({\n    name: yup.string().max(255).required('First name is required'),\n    email: yup.string()\n        .email('Must be a valid email')\n        .max(255)\n        .required('Email is required'),\n    password: yup.string().max(255).required('Password is required'),\n});","import styled from 'styled-components';\n\nexport const Error = styled.div`\n  margin-bottom: ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  color: ${p => p.theme.colors.accent};\n`;\n\nexport const ButtonAddContact = styled.button`\n  display: flex;\n  margin-left: auto;\n  width: 100px;\n  justify-content: center;\n  cursor: pointer;\n  margin-top: ${p => p.theme.space[4]}px;\n  border-radius: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[1]}px;\n  box-shadow: -1px 1px 4px 0px rgba(140, 14, 170, 1);\n  transition: background-color 250ms cubic-bezier(0.2, 0, 0, 0.7),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: ${p => p.theme.colors.hoverBgColor};\n    color: ${p => p.theme.colors.thirdTextColor};\n    transform: scale(1.1);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import { Formik, Form, ErrorMessage, Field } from 'formik';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'redux/contactsSlice';\nimport { toast } from 'react-toastify';\nimport Loader from 'components/Loader';\nimport { nameError, numberError, schema } from 'constants';\nimport { Error, ButtonAddContact } from './ContactForm.styled';\nimport { Box } from '@mui/system';\n\nconst ContactForm = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      const form = e.currentTarget.elements;\n      const name = form.name.value;\n      const number = form.number.value;\n\n      const matcheContactName = contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      );\n      const newContact = {\n        name,\n        number,\n      };\n\n      if (matcheContactName) {\n        toast.warn(`Sorry, ${name} is already in your contacts!`);\n        return;\n      } else {\n        await addContact(newContact);\n        toast.success('The contact is added to the list');\n        e.target.reset();\n      }\n    } catch (error) {\n      toast.error('Something is wrong. Try again!');\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={schema}\n    >\n      <Form onSubmit={handleSubmit}>\n        <Box\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          mb={3}\n        >\n          <h3>Name</h3>\n          <Field\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Box>\n        <ErrorMessage name=\"name\" render={msg => <Error>{nameError}</Error>} />\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <h3>Number</h3>\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Box>\n        <ErrorMessage\n          name=\"number\"\n          render={msg => <Error>{numberError}</Error>}\n        />\n        <ButtonAddContact type=\"submit\">\n          {isLoading ? <Loader /> : 'Add contact'}\n        </ButtonAddContact>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n    padding-bottom: ${p => p.theme.space[5]}px;\n    font-size: ${p => p.theme.fontSizes.l};\n    text-align: center;\n    color: ${p => p.theme.colors.text};\n`;","import PropTypes from 'prop-types';\nimport { Box } from 'components/Box';\nimport { Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n    return (\n        <Box as=\"section\" pb={4} pt={4}>\n            <Title>{title}</Title>\n            {children}\n        </Box>\n    );\n};\n\nSection.propTypes = {\n    title: PropTypes.string,\n};\n\nexport default Section;","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter, selectFilter } from 'redux/filterSlice';\nimport styled from 'styled-components';\n\nconst Title = styled.p`\n  padding-bottom: ${p => p.theme.space[2]}px;\n`;\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Title>Find contacts by name</Title>\n      <input\n        type=\"text\"\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        value={filter}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  display: flex;\n  align-items: flex-start;\n  gap: 5px;\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  padding: ${p => p.theme.space[2]}px 0;\n`;\n\nexport const ButtonDelet = styled.button`\n  display: flex;\n  margin-left: auto;\n  width: 120px;\n  justify-content: center;\n  cursor: pointer;\n  border-radius: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[1]}px;\n  box-shadow: -1px 1px 4px 0px rgba(140, 14, 170, 1);\n  transition: background-color 250ms cubic-bezier(0.2, 0, 0, 0.7),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: ${p => p.theme.colors.hoverBgColor};\n    color: ${p => p.theme.colors.thirdTextColor};\n    transform: scale(1.1);\n  }\n`;\n","import { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\nimport Loader from 'components/Loader';\nimport { Text, Container, ButtonDelet } from './Contact.styled';\n\nconst Contact = ({ id, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const handleDelete = async () => {\n    try {\n      await deleteContact(id);\n      toast.success('Contact deleted successfully!');\n    } catch (error) {\n      toast.error('Something is wrong. Try again!');\n    }\n  };\n\n  return (\n    <Container>\n      <Text>\n        {name}: {number}\n      </Text>\n      <ButtonDelet type=\"button\" onClick={handleDelete} disabled={isDeleting}>\n        {isDeleting ? <Loader /> : 'Delete contact'}\n      </ButtonDelet>\n    </Container>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.text};\n`;\n\nexport const EmptyList = styled.p`\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.accent};\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  margin-top: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[0]}px;\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  font-size: ${p => p.theme.space[4]}px;\n  justify-content: space-between;\n`;\n","import { useSelector } from 'react-redux';\nimport { Oval } from 'react-loader-spinner';\nimport { useGetContactsQuery } from 'redux/contactsSlice';\nimport { selectFilter } from 'redux/filterSlice';\nimport Contact from 'components/Contact';\nimport { Box } from 'components/Box';\nimport { ContactItem, EmptyList, List } from './ContactList.styled';\n\nconst ContactList = () => {\n  const { data: contacts, isFetching } = useGetContactsQuery();\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = contacts?.filter(({ name }) =>\n    name.toLowerCase().includes(filter)\n  );\n\n  return (\n    <List>\n      {isFetching && (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          <Oval\n            height=\"80\"\n            width=\"80\"\n            color=\"#ef0119\"\n            ariaLabel=\"oval-loading\"\n          />\n        </Box>\n      )}\n      {filteredContacts?.length > 0 &&\n        !isFetching &&\n        filteredContacts\n          .sort((firstName, secondName) =>\n            firstName.name.localeCompare(secondName.name)\n          )\n          .map(({ id, name, number }) => (\n            <ContactItem key={id}>\n              <Contact id={id} name={name} number={number} />\n            </ContactItem>\n          ))}\n      {filteredContacts?.length === 0 && (\n        <EmptyList>The contact list is empty</EmptyList>\n      )}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  margin-top: ${p => p.theme.space[0]}px;\n  margin-bottom: ${p => p.theme.space[0]}px;\n`;\n","import { useEffect } from 'react';\nimport { Box } from 'components/Box';\nimport ContactForm from 'components/ContactForm';\nimport Section from 'components/Section';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport { useAuth } from 'hooks';\nimport { Title } from './Contacts.styled';\nimport { useGetContactsQuery } from 'redux/contactsSlice';\nimport Loader from 'components/Loader';\n\nconst Contacts = () => {\n  const { isLoggedIn } = useAuth();\n  const { data: contacts, refetch } = useGetContactsQuery();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      refetch();\n    }\n  }, [isLoggedIn, refetch]);\n\n  return contacts ? (\n    <Box\n      m=\"auto\"\n      mt={5}\n      bg=\"firstBgColor\"\n      color=\"mainTextColor\"\n      p={4}\n      pl={5}\n      pr={5}\n      width=\"400px\"\n      fontFamily=\"Ubuntu\"\n      fontSize={16}\n      border=\"2px solid\"\n      borderRadius={16}\n    >\n      <Title>Phonebook</Title>\n      <Section>\n        <ContactForm />\n      </Section>\n\n      <Section title=\"Contacts\">\n        {contacts.length > 0 && <Filter />}\n        <ContactList />\n      </Section>\n    </Box>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default Contacts;\n"],"names":["nameError","numberError","requiredError","schema","yup","shape","name","required","matches","number","authSchema","max","email","password","Error","styled","p","theme","space","fontSizes","s","fontWeights","normal","colors","accent","ButtonAddContact","hoverBgColor","thirdTextColor","createBox","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","isLoading","handleSubmit","e","preventDefault","form","currentTarget","elements","value","matcheContactName","find","contact","toLowerCase","newContact","toast","target","reset","initialValues","validationSchema","onSubmit","display","justifyContent","alignItems","mb","type","pattern","title","render","msg","Loader","Title","l","text","children","Box","as","pb","pt","filter","useSelector","selectFilter","dispatch","useDispatch","onChange","changeFilter","Text","Container","ButtonDelet","id","useDeleteContactMutation","deleteContact","isDeleting","handleDelete","onClick","disabled","ContactItem","m","bold","EmptyList","List","isFetching","filteredContacts","includes","height","width","color","ariaLabel","length","sort","firstName","secondName","localeCompare","map","isLoggedIn","useAuth","refetch","useEffect","mt","bg","pl","pr","fontFamily","fontSize","border","borderRadius"],"sourceRoot":""}